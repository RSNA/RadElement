{
	"info": {
		"_postman_id": "c4c3aaba-29e3-4b40-8e89-701f093ea901",
		"name": "RadElement",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Elements",
			"item": [
				{
					"name": "elements/RDE42/sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ddb1805-e456-47ee-b628-9b73cbed9580",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Sets\", function () {",
									"    pm.expect(jsonData.sets).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Part of CAR/DS Adrenal Nodule Set\", function() {",
									"    pm.expect(jsonData.sets[0].id).to.eql('3');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/RDE42/sets",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								"RDE42",
								"sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "elements/RDE42/codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d09c99d-432e-417d-91f4-ff0bb09026a2",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Codes\", function () {",
									"    pm.expect(jsonData.codes).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Has RADLEX RID5821\", function() {",
									"    var testIndex = jsonData.codes.map(",
									"    function(o) {",
									"        return o.code; // <-- HERE is the name of the property",
									"    }).indexOf('RID5821'); // <-- HERE is the value we are searching for",
									"    pm.expect(jsonData.codes[testIndex].code).to.eql('RID5821');",
									"});",
									"",
									"",
									"pm.test(\"Has SNOMEDCT 272741003\", function() {",
									"    var testIndex = jsonData.codes.map(",
									"    function(o) {",
									"        return o.code; // <-- HERE is the name of the property",
									"    }).indexOf('272741003'); // <-- HERE is the value we are searching for",
									"    pm.expect(jsonData.codes[testIndex].code).to.include('272741003');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/RDE42/codes",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								"RDE42",
								"codes"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - RDE83",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d09c99d-432e-417d-91f4-ff0bb09026a2",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"pm.test(\"ID = RDE83\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql('RDE83');",
									"});",
									"",
									"pm.test(\"Has Sets\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.sets).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/RDE83",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								"RDE83"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - RDE44",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d09c99d-432e-417d-91f4-ff0bb09026a2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"pm.test(\"ID = RDE44\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql('RDE44');",
									"});",
									"",
									"pm.test(\"Has Sets\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.sets).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/RDE44",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								"RDE44"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - RDE65",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d09c99d-432e-417d-91f4-ff0bb09026a2",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"pm.test(\"ID = RDE65\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql('RDE65');",
									"});",
									"",
									"pm.test(\"Has Sets\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.sets).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/RDE65",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								"RDE65"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - All Elements",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a87391-823f-4147-b030-d6b9c3f979d8",
								"type": "text/javascript",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "elements/RDE42/values",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d09c99d-432e-417d-91f4-ff0bb09026a2",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Values\", function () {",
									"    pm.expect(jsonData.values).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Has Value R\", function() {",
									"    var testIndex = jsonData.values.map(",
									"    function(o) {",
									"        return o.value; // <-- HERE is the name of the property",
									"    }).indexOf('R'); // <-- HERE is the value we are searching for",
									"    pm.expect(jsonData.values[testIndex].value).to.eql('R');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements/RDE42/values",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements",
								"RDE42",
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "elements?name=atten",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d09c99d-432e-417d-91f4-ff0bb09026a2",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Elements\", function () {",
									"    pm.expect(jsonData.elements).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Has RDE44\", function() {",
									"    var testIndex = jsonData.elements.map(",
									"    function(o) {",
									"        return o.id; // <-- HERE is the name of the property",
									"    }).indexOf('RDE44'); // <-- HERE is the value we are searching for",
									"    pm.expect(testIndex).to.be.greaterThan(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/elements?name=atten",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"elements"
							],
							"query": [
								{
									"key": "name",
									"value": "atten"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sets",
			"item": [
				{
					"name": "CDE - RDES5 Child Elements",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5459054-76f9-439c-9f88-c2368e0f5bfe",
								"type": "text/javascript",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/sets/RDES5/elements",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"sets",
								"RDES5",
								"elements"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - RDES5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b52130b8-87dc-4a10-8102-e1bf78decd49",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"pm.test(\"ID = RDES5\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.set.id).to.eql('RDES5');",
									"});",
									"",
									"pm.test(\"Has Elements\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.elements).to.be.an('object');",
									"});",
									"",
									"pm.test(\"Has Index Codes\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.index_codes).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/sets/RDES5",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"sets",
								"RDES5"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - RDES6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b52130b8-87dc-4a10-8102-e1bf78decd49",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"pm.test(\"ID = RDES6\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.set.id).to.eql('RDES6');",
									"});",
									"",
									"pm.test(\"Has Elements\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.elements).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/sets/RDES6",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"sets",
								"RDES6"
							]
						}
					},
					"response": []
				},
				{
					"name": "CDE - All Element Sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef2305dc-4bf8-4793-aa93-a153d2dc6bff",
								"type": "text/javascript",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/sets/",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"sets",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Codes",
			"item": [
				{
					"name": "CDE - All Codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f081fe9f-6150-41b0-9782-bbe2f66dbbec",
								"type": "text/javascript",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/codes/",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"codes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "codes/RADLEX",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f081fe9f-6150-41b0-9782-bbe2f66dbbec",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/codes/RADLEX",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"codes",
								"RADLEX"
							]
						}
					},
					"response": []
				},
				{
					"name": "codes/RADLEX/RID28662",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f081fe9f-6150-41b0-9782-bbe2f66dbbec",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has RADLEX RID28662\", function() {",
									"    pm.expect(jsonData.query.code).to.eql('RID28662');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/codes/RADLEX/RID28662",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"codes",
								"RADLEX",
								"RID28662"
							]
						}
					},
					"response": []
				},
				{
					"name": "codes/RADLEX/RID28662/elements",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f081fe9f-6150-41b0-9782-bbe2f66dbbec",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Includes RDE44\", function() {",
									"    var testIndex = jsonData.elements.map(",
									"    function(o) {",
									"        return o.id;",
									"    }).indexOf('RDE44');",
									"    pm.expect(jsonData.elements[testIndex].id).to.eql('RDE44');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/codes/RADLEX/RID28662/elements",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"codes",
								"RADLEX",
								"RID28662",
								"elements"
							]
						}
					},
					"response": []
				},
				{
					"name": "codes/RADLEX/RID28662/elements Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f081fe9f-6150-41b0-9782-bbe2f66dbbec",
								"exec": [
									"tests[\"Content-Type is present\"] = pm.response.to.have.header(\"Content-Type\");",
									"",
									"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('Content-Type') === \"application/json\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Includes RDE28\", function() {",
									"    var testIndex = jsonData.values.map(",
									"    function(o) {",
									"        return o.id;",
									"    }).indexOf('RDE28');",
									"    pm.expect(jsonData.values[testIndex].id).to.eql('RDE28');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{hostname}}/api/v1/codes/SNOMEDCT/24028007/values",
							"protocol": "http",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"v1",
								"codes",
								"SNOMEDCT",
								"24028007",
								"values"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "00ae0272-08ef-409b-8116-60edaa20288a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "097f03a1-ca9c-4a43-acca-0f68ce79941a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4558466c-02af-4d5b-8b70-a79a16f3d2d2",
			"key": "hostname",
			"value": "",
			"type": "string"
		}
	]
}